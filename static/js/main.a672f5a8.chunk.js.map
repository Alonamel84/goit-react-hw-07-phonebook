{"version":3,"sources":["components/data/data.module.css","components/ContactItem/ContactItem.module.css","components/FilterName/FilterName.module.css","components/ContactsList/ContactList.module.css","redux/contacts/actions.js","redux/contacts/contacts-operations.js","components/ContactForm/ContactForm.jsx","components/FilterName/FilterName.jsx","components/ContactItem/ContactItem.jsx","components/ContactsList/ContactsList.jsx","redux/contacts/contacts-selectors.js","App.js","redux/contacts/contacts.reducers.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","fetchContactError","createAction","fetchContactSuccess","fetchContactRequest","filterContactError","filterContactSuccess","filterContactRequest","deleteContactSuccess","deleteContactRequest","deleteContactError","addContactSuccess","addContactRequest","addContactError","axios","defaults","baseURL","addContact","name","number","id","dispatch","contact","post","then","data","catch","error","deleteContact","delete","fetchContact","get","ContactForm","useDispatch","useState","setNumber","setName","handleChange","e","target","value","className","s","form","onSubmit","preventDefault","some","item","toLowerCase","alert","operations","shortid","generate","label","pattern","title","required","type","placeholder","onChange","addButton","connect","filterContact","filter","ContactItem","onDelete","contactItem","delButton","onClick","ContactList","filterContacts","contactList","map","getNameFilter","state","contacts","getContacts","items","App","useSelector","manualFilter","includes","container","currentTarget","filterReducer","createReducer","payload","itemsReducer","action","contactsReducer","combineReducers","rootReducer","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a672f5a8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"data_container__3uWMT\",\"title\":\"data_title__1lKxs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"delButton\":\"ContactItem_delButton__-p1u9\",\"contactItem\":\"ContactItem_contactItem__2ioCP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"FilterName_label__1iUQM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2PX3K\"};","import { createAction } from '@reduxjs/toolkit';\r\n// export const addContact = createAction('contactItem/addContact');\r\n\r\nexport const fetchContactError = createAction('contactItem/fetchContactError');\r\nexport const fetchContactSuccess = createAction('contactItem/fetchContactSuccess');\r\nexport const fetchContactRequest = createAction('contactItem/fetchContactRequest');\r\n// export const filterContact = createAction('contactItem/filterContact');\r\nexport const filterContactError = createAction('contactItem/filterContactError');\r\nexport const filterContactSuccess = createAction('contactItem/filterContactSuccess');\r\nexport const filterContactRequest = createAction('contactItem/filterContactRequest');\r\n\r\n// export const deleteContact = createAction('contactItem/deleteContact');\r\nexport const deleteContactSuccess = createAction('contactItem/deleteContactSuccess');\r\nexport const deleteContactRequest = createAction('contactItem/deleteContactRequest');\r\nexport const deleteContactError = createAction('contactItem/deleteContactError');\r\n\r\nexport const addContactSuccess = createAction('contactItem/addContactSuccess');\r\nexport const addContactRequest = createAction('contactItem/addContactRequest');\r\nexport const addContactError = createAction('contactItem/addContactError');\r\n\r\n// export default {\r\n//   fetchContactError,\r\n//   fetchContactRequest,\r\n//   fetchContactSuccess,\r\n//   filterContactError,\r\n//   filterContactRequest,\r\n//   filterContactSuccess,\r\n//   deleteContactSuccess,\r\n//   deleteContactRequest,\r\n//   deleteContactError,\r\n//   addContactSuccess,\r\n//   addContactRequest,\r\n//   addContactError,\r\n// };\r\n\r\n///------------REDUX VERSION ACTIONS------------------///\r\n// import { FILTERContact, SETContact, REMOVEContact } from './contacts/contacts.vars';\r\n// export const addContact = contact => {\r\n//   return {\r\n//     type: SETContact,\r\n//     payload: contact,\r\n//   };\r\n// };\r\n// export const filterContact = value => {\r\n//   return {\r\n//     type: FILTERContact,\r\n//     payload: value,\r\n//   };\r\n// };\r\n// export const deleteContact = id => {\r\n//   return {\r\n//     type: REMOVEContact,\r\n//     payload: id,\r\n//   };\r\n// };\r\n// export default addContact;\r\n//-------------------------------------------------------------//\r\n","import axios from 'axios';\r\nimport {\r\n  addContactSuccess,\r\n  addContactRequest,\r\n  addContactError,\r\n  deleteContactSuccess,\r\n  deleteContactRequest,\r\n  deleteContactError,\r\n  fetchContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n} from './actions';\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nconst fetchContact = () => dispatch => {\r\n  dispatch(fetchContactRequest());\r\n  axios\r\n    .get('./contacts')\r\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\r\n    .catch(error => dispatch(fetchContactError(error)));\r\n};\r\nconst addContact =\r\n  ({ name, number, id }) =>\r\n  dispatch => {\r\n    const contact = { name, number, id };\r\n    dispatch(addContactRequest());\r\n    axios\r\n      .post('/contacts', contact)\r\n      .then(({ data }) => dispatch(addContactSuccess(data)))\r\n      .catch(error => dispatch(addContactError(error)));\r\n  };\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n\r\nexport default { addContact, deleteContact, fetchContact };\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from '../ContactForm/ContactForm.module.css'\r\nimport  operations   from '../../redux/contacts/contacts-operations';\r\nimport {  useDispatch } from 'react-redux';\r\nimport shortid from 'shortid';\r\n\r\nconst ContactForm = ({ contact }) => {\r\n  const dispatch = useDispatch();\r\n  const [number, setNumber] = useState('');\r\n  const [name, setName] = useState('');\r\n     \r\n  const handleChange = e => {\r\n    switch (e.target.name) {\r\n      case 'name':  setName(e.target.value); break ;\r\n      case 'number': setNumber(e.target.value); break ;\r\n      default: return;\r\n    }\r\n    };\r\n      \r\n  const onFormSubmit = e => {\r\n         e.preventDefault();\r\n     e.target.name === 'name'?  setName(e.target.value) :  setNumber(e.target.value)\r\n     if (contact.some(item => item.name.toLowerCase() === name.toLowerCase()))\r\n            return alert(`${name} is already in contacts`);\r\n    dispatch(operations.addContact({name, number, id: shortid.generate()}));\r\n    setNumber('')\r\n    setName('')\r\n    };\r\n    \r\n        return(\r\n        <>\r\n         <form className={ s.form} onSubmit= {onFormSubmit}>\r\n    <label className={ s.label}>\r\n            Name\r\n            <input\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"Enter name\"\r\n              value={name}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n          <label className={ s.label}>\r\n            Number\r\n            <input\r\n              type=\"tel\"\r\n            name=\"number\"\r\n            placeholder=\"Enter phone number\"\r\n              pattern=\"\\+?\\d{(1, 4)}?[-.\\s]?\\(?\\d{(1, 3)}?\\)?[-.\\s]?\\d\r\n            {(1, 4)}[-.\\s]?\\d{(1, 4)}[-.\\s]?\\d{(1, 9)}\"\r\n              title=\"Номер телефона должен состоять цифр и\r\n            может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              value={number}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n\r\n                    <button className={ s.addButton} type=\"submit\">Add contact</button>\r\n        </form>\r\n\r\n            </>\r\n        )\r\n    \r\n};\r\n\r\n// const mapDispatchToProps = {\r\n//   addContact,\r\n// };\r\nexport default ContactForm;\r\n\r\nContactForm.propTypes = {\r\n  contact: PropTypes.array,\r\n  onSubmit: PropTypes.func,\r\n};\r\n","import s from '../FilterName/FilterName.module.css'\r\nimport PropTypes from 'prop-types';\r\nimport operations from './../../redux/contacts/contacts-operations';\r\nimport { connect } from 'react-redux';\r\nconst FilterName = ({ onChange }) => {\r\n    return(\r\n        <>\r\n            <label className={ s.label}>\r\n          Find contacts by name\r\n                <input name='filter'\r\n            type=\"text\"\r\n            placeholder=\"Enter name\"\r\n            onChange={onChange}\r\n                             \r\n          />\r\n    </label >\r\n         \r\n   </>\r\n    )\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  filterContact:(filter) => dispatch(operations.filterContact(filter)),\r\n});\r\nexport default connect(null, mapDispatchToProps)(FilterName);\r\nFilterName.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n","import s from '../ContactItem/ContactItem.module.css'\r\nimport PropTypes from 'prop-types';\r\nconst ContactItem = ({ name,  number, onDelete,id }) => {\r\n  return (\r\n\r\n        <>\r\n            <li className={s.contactItem} id={ id}>{name} {number}\r\n            <button className={ s.delButton} type='button' onClick={() => { onDelete(id) }}>Delete</button>\r\n           </li>\r\n            </>\r\n    )\r\n}\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string,\r\n  onDelete: PropTypes.func,\r\n  id: PropTypes.string,\r\n};\r\nexport default ContactItem;","import s from '../ContactsList/ContactList.module.css'\r\nimport PropTypes from 'prop-types';\r\nimport ContactItem from '../ContactItem';\r\nconst ContactList = ({ filterContacts, onDelete }) => {\r\n    return (\r\n       \r\n        <ul className={s.contactList}>\r\n            {filterContacts.map(item => (\r\n            <ContactItem\r\n              key={item.id}\r\n              name={item.name}\r\n              number={item.number}\r\n              onDelete={onDelete}\r\n              id={item.id}\r\n            ></ContactItem>\r\n          ))}</ul>\r\n    )\r\n}\r\nContactList.propTypes = {\r\n    children: PropTypes.node\r\n}\r\n\r\nexport default ContactList;","export const getNameFilter = state => state.contacts.filter;\r\nexport const getContacts = state => state.contacts.items;\r\n","import ContactForm from './components/ContactForm';\nimport './App.css';\nimport FilterName from './components/FilterName';\nimport ContactList from './components/ContactsList/ContactsList';\nimport s from './components/data/data.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport operations from './redux/contacts/contacts-operations';\n// import shortid from 'shortid';\nimport { filterContactSuccess } from './redux/contacts/actions';\nimport { getNameFilter, getContacts } from './redux/contacts/contacts-selectors';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const manualFilter = useSelector(getNameFilter);\n\n  function filterName(e) {\n    e.preventDefault();\n    dispatch(filterContactSuccess(e.currentTarget.value));\n  }\n\n  const filterArr = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(manualFilter.toLowerCase()),\n    );\n  };\n\n  const onDelete = id => {\n    dispatch(operations.deleteContact(id));\n  };\n\n  const filterContacts = filterArr();\n\n  return (\n    <div className={s.container}>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactForm contact={contacts}></ContactForm>\n      <h2 className={s.title}>Contacts</h2>\n      <FilterName onChange={filterName}></FilterName>\n      <ContactList filterContacts={filterContacts} onDelete={onDelete}></ContactList>\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  filterContactError,\r\n  filterContactRequest,\r\n  filterContactSuccess,\r\n  deleteContactSuccess,\r\n  deleteContactRequest,\r\n  deleteContactError,\r\n  addContactSuccess,\r\n  addContactRequest,\r\n  addContactError,\r\n} from './actions';\r\n\r\nconst filterReducer = createReducer('', {\r\n  [filterContactSuccess]: (state, { payload }) => payload,\r\n});\r\nconst itemsReducer = createReducer([], {\r\n  [addContactSuccess]: (state, action) => {\r\n    return [...state, action.payload];\r\n  },\r\n  [deleteContactSuccess]: (state, { payload }) => state.filter(item => item.id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactError]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactError]: () => true,\r\n  [filterContactSuccess]: () => false,\r\n  [filterContactRequest]: () => true,\r\n  [filterContactError]: () => true,\r\n});\r\n\r\nexport const contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n","import { combineReducers } from 'redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { contactsReducer } from './contacts/contacts.reducers';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\nconst store = configureStore({ reducer: rootReducer });\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__20Vq9\",\"form\":\"ContactForm_form__1AuUC\",\"addButton\":\"ContactForm_addButton__3ldap\"};"],"sourceRoot":""}