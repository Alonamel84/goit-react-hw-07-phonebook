{"version":3,"sources":["components/data/data.module.css","components/ContactItem/ContactItem.module.css","components/FilterName/FilterName.module.css","components/ContactsList/ContactList.module.css","redux/actions.js","components/ContactForm/ContactForm.jsx","components/FilterName/FilterName.jsx","components/ContactItem/ContactItem.jsx","components/ContactsList/ContactsList.jsx","App.js","redux/contacts/contacts.reducers.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","filterContact","deleteContact","mapDispatchToProps","connect","contact","useState","number","setNumber","name","setName","handleChange","e","target","value","className","s","form","onSubmit","preventDefault","some","item","toLowerCase","alert","id","shortid","generate","label","pattern","title","required","type","placeholder","onChange","addButton","ContactItem","onDelete","contactItem","delButton","onClick","ContactList","filterContacts","contactList","map","state","ownProps","contacts","items","filter","useEffect","JSON","parse","localStorage","getItem","prev","setItem","stringify","includes","container","data","currentTarget","filterReducer","createReducer","payload","itemsReducer","action","contactsReducer","combineReducers","rootReducer","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3762087b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"data_container__3uWMT\",\"title\":\"data_title__1lKxs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"delButton\":\"ContactItem_delButton__-p1u9\",\"contactItem\":\"ContactItem_contactItem__2ioCP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"FilterName_label__1iUQM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2PX3K\"};","import { createAction } from '@reduxjs/toolkit';\r\nexport const addContact = createAction('contactItem/addContact');\r\n\r\nexport const filterContact = createAction('contactItem/filterContact');\r\n\r\nexport const deleteContact = createAction('contactItem/deleteContact');\r\n\r\n///------------REDUX VERSION ACTIONS------------------///\r\n// import { FILTERContact, SETContact, REMOVEContact } from './contacts/contacts.vars';\r\n// export const addContact = contact => {\r\n//   return {\r\n//     type: SETContact,\r\n//     payload: contact,\r\n//   };\r\n// };\r\n// export const filterContact = value => {\r\n//   return {\r\n//     type: FILTERContact,\r\n//     payload: value,\r\n//   };\r\n// };\r\n// export const deleteContact = id => {\r\n//   return {\r\n//     type: REMOVEContact,\r\n//     payload: id,\r\n//   };\r\n// };\r\n// export default addContact;\r\n//-------------------------------------------------------------//\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from '../ContactForm/ContactForm.module.css'\r\nimport { addContact } from '../../redux/actions';\r\nimport { connect } from 'react-redux';\r\nimport shortid from 'shortid';\r\n\r\nconst ContactForm = ({ contact, addContact })=> {\r\n  const [number, setNumber] = useState('');\r\n  const [name, setName] = useState('');\r\n     \r\n  const handleChange = e => {\r\n    switch (e.target.name) {\r\n      case 'name':  setName(e.target.value); break ;\r\n      case 'number': setNumber(e.target.value); break ;\r\n      default: return;\r\n    }\r\n        //  e.target.name === 'name'?  setName(e.target.value) :  setNumber(e.target.value)\r\n    };\r\n      \r\n  const onFormSubmit = e => {\r\n         e.preventDefault();\r\n     e.target.name === 'name'?  setName(e.target.value) :  setNumber(e.target.value)\r\n     if (contact.some(item => item.name.toLowerCase() === name.toLowerCase()))\r\n            return alert(`${name} is already in contacts`);\r\n    //----------REACT VERSION---------------------------//\r\n            // onSubmit({ name, number })\r\n    //-------------------------------------------------//\r\n    addContact({name, number, id: shortid.generate()})\r\n    setNumber('')\r\n    setName('')\r\n    };\r\n    \r\n        return(\r\n        <>\r\n         <form className={ s.form} onSubmit= {onFormSubmit}>\r\n    <label className={ s.label}>\r\n            Name\r\n            <input\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"Enter name\"\r\n              value={name}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n          <label className={ s.label}>\r\n            Number\r\n            <input\r\n              type=\"tel\"\r\n            name=\"number\"\r\n            placeholder=\"Enter phone number\"\r\n              pattern=\"\\+?\\d{(1, 4)}?[-.\\s]?\\(?\\d{(1, 3)}?\\)?[-.\\s]?\\d\r\n            {(1, 4)}[-.\\s]?\\d{(1, 4)}[-.\\s]?\\d{(1, 9)}\"\r\n              title=\"Номер телефона должен состоять цифр и\r\n            может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              value={number}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n\r\n                    <button className={ s.addButton} type=\"submit\">Add contact</button>\r\n        </form>\r\n\r\n            </>\r\n        )\r\n    \r\n};\r\nconst mapDispatchToProps = {\r\n  addContact,\r\n};\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n\r\nContactForm.propTypes = {\r\n  contact: PropTypes.array,\r\n  onSubmit: PropTypes.func,\r\n};\r\n","import s from '../FilterName/FilterName.module.css'\r\nimport PropTypes from 'prop-types';\r\nimport { filterContact } from '../../redux/actions';\r\nimport { connect } from 'react-redux';\r\nconst FilterName = ({ onChange }) => {\r\n    return(\r\n        <>\r\n            <label className={ s.label}>\r\n          Find contacts by name\r\n                <input name='filter'\r\n            type=\"text\"\r\n            placeholder=\"Enter name\"\r\n            onChange={onChange}\r\n            \r\n            ////-----REACT VERSION-----///\r\n            // value={value}\r\n            //  onChange={onChange}\r\n            //------------------------//                     \r\n          />\r\n    </label >\r\n         \r\n   </>\r\n    )\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  filterContact,\r\n};\r\nexport default connect(null, mapDispatchToProps)(FilterName);\r\nFilterName.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n","import s from '../ContactItem/ContactItem.module.css'\r\nimport PropTypes from 'prop-types';\r\nconst ContactItem = ({ name,  number, onDelete,id }) => {\r\n  return (\r\n\r\n        <>\r\n            <li className={s.contactItem} id={ id}>{name} {number}\r\n            <button className={ s.delButton} type='button' onClick={() => { onDelete(id) }}>Delete</button>\r\n           </li>\r\n            </>\r\n    )\r\n}\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string,\r\n  onDelete: PropTypes.func,\r\n  id: PropTypes.string,\r\n};\r\nexport default ContactItem;","import s from '../ContactsList/ContactList.module.css'\r\nimport PropTypes from 'prop-types';\r\nimport ContactItem from '../ContactItem';\r\nconst ContactList = ({ filterContacts, onDelete }) => {\r\n    return (\r\n       \r\n        <ul className={s.contactList}>\r\n            {filterContacts.map(item => (\r\n            <ContactItem\r\n              key={item.id}\r\n              name={item.name}\r\n              number={item.number}\r\n              onDelete={onDelete}\r\n              id={item.id}\r\n            ></ContactItem>\r\n          ))}</ul>\r\n    )\r\n}\r\nContactList.propTypes = {\r\n    children: PropTypes.node\r\n}\r\n\r\nexport default ContactList;","import { useEffect } from 'react';\nimport ContactForm from './components/ContactForm';\nimport './App.css';\nimport FilterName from './components/FilterName';\nimport ContactList from './components/ContactsList/ContactsList';\nimport s from './components/data/data.module.css';\nimport { connect } from 'react-redux';\nimport { addContact } from './redux/actions';\nimport { filterContact, deleteContact } from './redux/actions';\nimport shortid from 'shortid';\nconst App = ({ addContact, contacts, filter, deleteContact, filterContact }) => {\n  //================REACT VERSION=======================//\n  // const [contacts, setContacts] = useState([]);\n  // const [filter, setFilter] = useState('');\n  //===================================================//\n  useEffect(() => {\n    const savedContact = JSON.parse(localStorage.getItem('keyContact'));\n    //================REACT VERSION=======================//\n    // if (savedContact) savedContact;\n    //===================================================//\n  }, []);\n\n  useEffect(() => {\n    if (prev => prev !== contacts) {\n      localStorage.setItem('keyContact', JSON.stringify(contacts));\n    }\n  });\n\n  const handleSubmit = data => {\n    const contact = { id: shortid.generate(), ...data };\n    addContact(contact);\n    //===========REACT VERSION================//\n    // setContacts(prev => {\n    //   return [...prev, contact];\n    // });\n    //=====================================//\n  };\n\n  function filterName(e) {\n    e.preventDefault();\n    filterContact(e.currentTarget.value);\n    //=============REACT VERSION================//\n    // setFilter(e.currentTarget.value);\n    //=========================================//\n  }\n\n  const filterArr = () => {\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  };\n\n  const onDelete = id => {\n    deleteContact(id);\n    ///--------------REACT VERSION-------------------//\n    // /type: contactItem/deleteContact,\n    // payload: id\n    // setContacts(prev => prev.filter(item => item.id !== id));\n    // addContact(contact).filter(item => item.id !== id);\n    //-------------------------------------------------///\n  };\n\n  const filterContacts = filterArr();\n  //------------REACT VERSION------------////\n  // const filterContacts = filterArr();\n  //---------------------------------------///\n  return (\n    <div className={s.container}>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactForm onSubmit={handleSubmit} contact={contacts}></ContactForm>\n      <h2 className={s.title}>Contacts</h2>\n      <FilterName onChange={filterName}></FilterName>\n      <ContactList filterContacts={filterContacts} onDelete={onDelete}></ContactList>\n    </div>\n  );\n};\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    contacts: state.contacts.items,\n    filter: state.contacts.filter,\n  };\n};\nconst mapDispatchToProps = {\n  addContact,\n  filterContact,\n  deleteContact,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { filterContact, deleteContact, addContact } from '../actions';\r\n\r\nconst filterReducer = createReducer('', {\r\n  [filterContact]: (state, { payload }) => payload,\r\n});\r\nconst itemsReducer = createReducer([], {\r\n  [addContact]: (state, action) => {\r\n    return [...state, action.payload];\r\n  },\r\n  [deleteContact]: (state, { payload }) => state.filter(item => item.id !== payload),\r\n});\r\n\r\nexport const contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\n//---------------- OLD VERSION OF FILTER REDUCER--------//\r\n// import { FILTERContact, SETContact, REMOVEContact } from './contacts.constants';\r\n// const filterReducer = (state = '', action) => {\r\n//   switch (action.type) {\r\n//     case FILTERContact:\r\n//       return action.payload;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n//--------------------------------------------------------///\r\n\r\n//----------OLD VERSION OF ITEMS_REDUCER--------------//\r\n// const itemsReducer = (state = [], action) => {\r\n//   switch (action.type) {\r\n//     case SETContact:\r\n//       return [...state, action.payload];\r\n//     case REMOVEContact:\r\n//       console.log(action);\r\n//       return state.filter(item => item.id !== action.payload);\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n//-------------------------------------------------------////\r\n","import { combineReducers } from 'redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { contactsReducer } from './contacts/contacts.reducers';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\nconst store = configureStore({ reducer: rootReducer });\r\nexport default store;\r\n\r\n//--------------REDUX VERSION STORE--------------------------///\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n//-----------------------------------------------------------//\r\n\r\n// window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__20Vq9\",\"form\":\"ContactForm_form__1AuUC\",\"addButton\":\"ContactForm_addButton__3ldap\"};"],"sourceRoot":""}